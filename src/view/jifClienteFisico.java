/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */
package view;

import data.ClienteData;
import java.util.ArrayList;
import java.util.logging.Level;
import java.util.logging.Logger;
import javax.swing.JOptionPane;
import javax.swing.table.DefaultTableModel;
import model.ClienteModel;
import model.ClientePFModel;

/**
 *
 * @author andre
 */
public class jifClienteFisico extends javax.swing.JInternalFrame {

    private ClientePFModel obj;
    private ClienteData DAO;
    private int acao;

    ArrayList<ClientePFModel> listaclientesfisico;

    public jifClienteFisico() {
        initComponents();
        obj = new ClientePFModel();
        try {
            DAO = new ClienteData();
        } catch (Exception ex) {
            Logger.getLogger(jifClienteFisico.class.getName()).log(Level.SEVERE, null, ex);
        }
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jLabel7 = new javax.swing.JLabel();
        jLabel4 = new javax.swing.JLabel();
        jbSalvar = new javax.swing.JButton();
        jtfCPF = new javax.swing.JTextField();
        jbEditar = new javax.swing.JButton();
        jLabel5 = new javax.swing.JLabel();
        jbExcluir = new javax.swing.JButton();
        jtfTelefone = new javax.swing.JTextField();
        jLabel6 = new javax.swing.JLabel();
        jLabel1 = new javax.swing.JLabel();
        jtfEndereco = new javax.swing.JTextField();
        jLabel2 = new javax.swing.JLabel();
        jlIdClienteFisico = new javax.swing.JLabel();
        jtfNome = new javax.swing.JTextField();
        jScrollPane1 = new javax.swing.JScrollPane();
        jtbClienteFisico = new javax.swing.JTable();
        jtfBuscaCliente = new javax.swing.JTextField();
        jbNovo = new javax.swing.JButton();
        jbLimpar = new javax.swing.JButton();
        jbCancelar = new javax.swing.JButton();
        jLabel3 = new javax.swing.JLabel();
        jtfRG = new javax.swing.JTextField();

        setClosable(true);
        setIconifiable(true);
        setMaximizable(true);
        setResizable(true);

        jLabel7.setText("Busca:");

        jLabel4.setText("CPF:");

        jbSalvar.setText("Salvar");
        jbSalvar.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jbSalvarActionPerformed(evt);
            }
        });

        jbEditar.setText("Editar");
        jbEditar.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jbEditarActionPerformed(evt);
            }
        });

        jLabel5.setText("Telefone:");

        jbExcluir.setText("Excluir");
        jbExcluir.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jbExcluirActionPerformed(evt);
            }
        });

        jLabel6.setText("Endereço:");

        jLabel1.setFont(new java.awt.Font("Dialog", 1, 18)); // NOI18N
        jLabel1.setText("Cadastro de Pessoa Física");

        jLabel2.setText("Nome:");

        jlIdClienteFisico.setText("0");

        jtbClienteFisico.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {
                {null, null, null},
                {null, null, null},
                {null, null, null},
                {null, null, null}
            },
            new String [] {
                "Nome", "CPF", "Endereço"
            }
        ) {
            boolean[] canEdit = new boolean [] {
                false, false, false
            };

            public boolean isCellEditable(int rowIndex, int columnIndex) {
                return canEdit [columnIndex];
            }
        });
        jtbClienteFisico.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                jtbClienteFisicoMouseClicked(evt);
            }
        });
        jScrollPane1.setViewportView(jtbClienteFisico);

        jtfBuscaCliente.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyReleased(java.awt.event.KeyEvent evt) {
                jtfBuscaClienteKeyReleased(evt);
            }
        });

        jbNovo.setText("Novo");
        jbNovo.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jbNovoActionPerformed(evt);
            }
        });

        jbLimpar.setText("Limpar");
        jbLimpar.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jbLimparActionPerformed(evt);
            }
        });

        jbCancelar.setText("Cancelar");
        jbCancelar.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jbCancelarActionPerformed(evt);
            }
        });

        jLabel3.setText("RG:");

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(layout.createSequentialGroup()
                        .addGap(35, 35, 35)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addGroup(layout.createSequentialGroup()
                                .addComponent(jLabel2)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                .addComponent(jtfNome))
                            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                                .addGap(0, 0, Short.MAX_VALUE)
                                .addComponent(jtfRG, javax.swing.GroupLayout.PREFERRED_SIZE, 169, javax.swing.GroupLayout.PREFERRED_SIZE))
                            .addGroup(layout.createSequentialGroup()
                                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                    .addComponent(jlIdClienteFisico)
                                    .addGroup(layout.createSequentialGroup()
                                        .addGap(57, 57, 57)
                                        .addComponent(jLabel1))
                                    .addGroup(layout.createSequentialGroup()
                                        .addComponent(jLabel6)
                                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                        .addComponent(jtfEndereco, javax.swing.GroupLayout.PREFERRED_SIZE, 334, javax.swing.GroupLayout.PREFERRED_SIZE))
                                    .addGroup(layout.createSequentialGroup()
                                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING, false)
                                            .addGroup(javax.swing.GroupLayout.Alignment.LEADING, layout.createSequentialGroup()
                                                .addComponent(jLabel5)
                                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                                .addComponent(jtfTelefone))
                                            .addGroup(javax.swing.GroupLayout.Alignment.LEADING, layout.createSequentialGroup()
                                                .addComponent(jLabel4)
                                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                                .addComponent(jtfCPF, javax.swing.GroupLayout.PREFERRED_SIZE, 164, javax.swing.GroupLayout.PREFERRED_SIZE)))
                                        .addGap(26, 26, 26)
                                        .addComponent(jLabel3)))
                                .addGap(0, 0, Short.MAX_VALUE))))
                    .addGroup(layout.createSequentialGroup()
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addGroup(layout.createSequentialGroup()
                                .addContainerGap()
                                .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                            .addGroup(layout.createSequentialGroup()
                                .addGap(21, 21, 21)
                                .addComponent(jLabel7)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                .addComponent(jtfBuscaCliente, javax.swing.GroupLayout.PREFERRED_SIZE, 356, javax.swing.GroupLayout.PREFERRED_SIZE))
                            .addGroup(layout.createSequentialGroup()
                                .addGap(66, 66, 66)
                                .addComponent(jbNovo)
                                .addGap(43, 43, 43)
                                .addComponent(jbEditar)
                                .addGap(45, 45, 45)
                                .addComponent(jbExcluir))
                            .addGroup(layout.createSequentialGroup()
                                .addGap(44, 44, 44)
                                .addComponent(jbSalvar)
                                .addGap(37, 37, 37)
                                .addComponent(jbLimpar)
                                .addGap(44, 44, 44)
                                .addComponent(jbCancelar)))
                        .addGap(0, 0, Short.MAX_VALUE)))
                .addContainerGap())
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addComponent(jLabel1, javax.swing.GroupLayout.PREFERRED_SIZE, 36, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(1, 1, 1)
                .addComponent(jlIdClienteFisico)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jtfNome, javax.swing.GroupLayout.PREFERRED_SIZE, 25, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jLabel2))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(layout.createSequentialGroup()
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(jLabel4)
                            .addComponent(jtfCPF, javax.swing.GroupLayout.PREFERRED_SIZE, 27, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addGap(18, 18, 18)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(jLabel5)
                            .addComponent(jtfTelefone, javax.swing.GroupLayout.PREFERRED_SIZE, 27, javax.swing.GroupLayout.PREFERRED_SIZE)))
                    .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                        .addComponent(jtfRG, javax.swing.GroupLayout.PREFERRED_SIZE, 25, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addComponent(jLabel3)))
                .addGap(18, 18, 18)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel6)
                    .addComponent(jtfEndereco, javax.swing.GroupLayout.PREFERRED_SIZE, 29, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(32, 32, 32)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jbEditar)
                    .addComponent(jbExcluir)
                    .addComponent(jbNovo))
                .addGap(18, 18, 18)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jbLimpar)
                    .addComponent(jbCancelar)
                    .addComponent(jbSalvar))
                .addGap(18, 18, 18)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jtfBuscaCliente, javax.swing.GroupLayout.PREFERRED_SIZE, 31, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jLabel7))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, 94, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void jbSalvarActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jbSalvarActionPerformed
       try {
            if (validarCampos()) {
                if (preencherObjeto()) {
                    if (acao == 1) {
                        if (DAO.incluir(obj)) {
                            JOptionPane.showMessageDialog(this, "Salvo com sucesso!",
                                    "Sistema", JOptionPane.INFORMATION_MESSAGE);
                            //salvar no banco
                            jbCancelarActionPerformed(evt);
                        }
                    }
                    if (acao == 2) {
                        if (DAO.editar(obj)) {
                            JOptionPane.showMessageDialog(this, "Editado com sucesso!",
                                    "Sistema", JOptionPane.INFORMATION_MESSAGE);
                            //salvar no banco
                            jbCancelarActionPerformed(evt);
                        }
                    }
                }
            }
        } catch (Exception erro) {
            JOptionPane.showMessageDialog(this, "Erro ao salvar:" + erro.getMessage(), "Sistema", JOptionPane.ERROR_MESSAGE);
        }
    }//GEN-LAST:event_jbSalvarActionPerformed

    private void jbEditarActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jbEditarActionPerformed
        acao = 2; //editar
        jtfNome.setEnabled(true);
        jtfEndereco.setEnabled(true);
        jtfTelefone.setEnabled(true);
        jtfCPF.setEnabled(true);
        jtfRG.setEnabled(true);
        jbSalvar.setEnabled(true);
        jbCancelar.setEnabled(true);
        jbNovo.setEnabled(false);
        jbEditar.setEnabled(false);
        jbExcluir.setEnabled(false);
    }//GEN-LAST:event_jbEditarActionPerformed

    private void jbExcluirActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jbExcluirActionPerformed
        try {
            if (JOptionPane.showConfirmDialog(this, "Deseja excluir esse serviço?") == JOptionPane.YES_OPTION) {
                if (DAO.excluir(obj, Integer.parseInt(jlIdClienteFisico.getText()))) {
                    JOptionPane.showMessageDialog(this, "Excluído com sucesso!");
                    jbCancelarActionPerformed(evt);
                }
            }
        } catch (Exception e) {
            JOptionPane.showMessageDialog(this, "Erro ao excluir: " + e.getMessage());
        }
    }//GEN-LAST:event_jbExcluirActionPerformed

    private void jbNovoActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jbNovoActionPerformed
        jbNovo.setEnabled(false);
        jbSalvar.setEnabled(true);
        jbCancelar.setEnabled(true);
        jbEditar.setEnabled(false);
        jbExcluir.setEnabled(false);
        jtfBuscaCliente.setEnabled(false);
        jtbClienteFisico.setEnabled(false);
        jtfNome.setEnabled(true);
        jtfEndereco.setEnabled(true);
        jtfTelefone.setEnabled(true);
        jtfCPF.setEnabled(true);
        jtfRG.setEnabled(true);
        acao = 1;
    }//GEN-LAST:event_jbNovoActionPerformed

    private void jbLimparActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jbLimparActionPerformed
        try {
            extras.TrataFormulario.limparCampos(this);
        } catch (Exception ex) {
            Logger.getLogger(jifServico.class.getName()).log(Level.SEVERE, null, ex);
        }
    }//GEN-LAST:event_jbLimparActionPerformed

    private void jbCancelarActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jbCancelarActionPerformed
        jbNovo.setEnabled(true);
        jbSalvar.setEnabled(false);
        jbCancelar.setEnabled(false);
        jbEditar.setEnabled(false);
        jbExcluir.setEnabled(false);
        jtfBuscaCliente.setEnabled(true);
        jtbClienteFisico.setEnabled(true);
        jtfNome.setEnabled(false);
        jtfEndereco.setEnabled(false);
        jtfTelefone.setEnabled(false);
        jtfCPF.setEnabled(false);
        jtfRG.setEnabled(false);
        jtfNome.setText("");
        jtfEndereco.setText("");
        jtfTelefone.setText("");
        jtfCPF.setText("");
        jtfRG.setText("");
    }//GEN-LAST:event_jbCancelarActionPerformed

    private void jtbClienteFisicoMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_jtbClienteFisicoMouseClicked
        int linhaSelecionada = jtbClienteFisico.getSelectedRow();
        if (linhaSelecionada > -1) {
            jlIdClienteFisico.setText("" + listaclientesfisico.get(linhaSelecionada).getIdCliente());
            jtfNome.setText("" + listaclientesfisico.get(linhaSelecionada).getNome());
            jtfEndereco.setText("" + listaclientesfisico.get(linhaSelecionada).getEndereco());
            jtfTelefone.setText("" + listaclientesfisico.get(linhaSelecionada).getTelefone());
            jtfCPF.setText("" + listaclientesfisico.get(linhaSelecionada).getRG());
            jtfRG.setText("" + listaclientesfisico.get(linhaSelecionada).getCPF());
            jbEditar.setEnabled(true);
            jbExcluir.setEnabled(true);
        } else {
            jbEditar.setEnabled(false);
            jbExcluir.setEnabled(false);
        }
    }//GEN-LAST:event_jtbClienteFisicoMouseClicked

    private void jtfBuscaClienteKeyReleased(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_jtfBuscaClienteKeyReleased
        try {
            DefaultTableModel mp = (DefaultTableModel) jtbClienteFisico.getModel();
            mp.setNumRows(0);
            if (jtfBuscaCliente.getText().length() > 1) {
                listaclientesfisico = DAO.pesquisarClientePF(jtfBuscaCliente.getText());
                for (ClientePFModel j : listaclientesfisico) {
                    mp.addRow(new String[]{"" + j.getNome(), j.getCPF(), j.getTelefone()});
                }
            }
        } catch (Exception e) {
            JOptionPane.showMessageDialog(this, "Erro:" + e.getMessage(), "Erro ao pesquisar", JOptionPane.ERROR_MESSAGE);
        }
    }//GEN-LAST:event_jtfBuscaClienteKeyReleased


    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JLabel jLabel1;
    private javax.swing.JLabel jLabel2;
    private javax.swing.JLabel jLabel3;
    private javax.swing.JLabel jLabel4;
    private javax.swing.JLabel jLabel5;
    private javax.swing.JLabel jLabel6;
    private javax.swing.JLabel jLabel7;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JButton jbCancelar;
    private javax.swing.JButton jbEditar;
    private javax.swing.JButton jbExcluir;
    private javax.swing.JButton jbLimpar;
    private javax.swing.JButton jbNovo;
    private javax.swing.JButton jbSalvar;
    private javax.swing.JLabel jlIdClienteFisico;
    private javax.swing.JTable jtbClienteFisico;
    private javax.swing.JTextField jtfBuscaCliente;
    private javax.swing.JTextField jtfCPF;
    private javax.swing.JTextField jtfEndereco;
    private javax.swing.JTextField jtfNome;
    private javax.swing.JTextField jtfRG;
    private javax.swing.JTextField jtfTelefone;
    // End of variables declaration//GEN-END:variables
private boolean validarCampos() {
        String msg = "";
        if (jtfNome.getText().length() < 3 || jtfNome.getText().length() > 100) {
            msg += "\nO campo Nome deve conter entre 3 e 100 caracteres";
        }

        if (jtfEndereco.getText().length() < 3 || jtfEndereco.getText().length() > 200) {
            msg += "\nO campo Endereço deve conter entre 3 e 200 caracteres";
        }

        if (jtfTelefone.getText().length() < 1 || jtfTelefone.getText().length() > 20) {
            msg += "\nO campo telefone deve conter entre 1 e 20 caracteres";
        }

        if (jtfCPF.getText().length() < 1 || jtfCPF.getText().length() > 20) {
            msg += "\nO campo CPF deve conter entre 1 e 15 caracteres";
        }

        if (jtfRG.getText().length() < 1 || jtfRG.getText().length() > 20) {
            msg += "\nO campo RG deve conter entre 1 e 15 caracteres";
        }

        if (msg.isEmpty()) {
            return true;
        } else {
            JOptionPane.showMessageDialog(this, "Os campos abaixo precisam de atenção:"
                    + msg, "Atenção", JOptionPane.ERROR_MESSAGE);
        }
        return false;
    }

    private boolean preencherObjeto() throws Exception {
        obj.setIdCliente(Integer.parseInt(jlIdClienteFisico.getText()));
        obj.setNome(jtfNome.getText());
        obj.setEndereco(jtfEndereco.getText());
        obj.setTelefone(jtfTelefone.getText());
        obj.setCPF(jtfCPF.getText());
        obj.setRG(jtfRG.getText());
        return true;
    }

}
