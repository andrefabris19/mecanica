/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */
package view;

import data.ClienteData;
import data.OSData;
import data.OS_ServicoData;
import data.ServicoData;
import data.VeiculoData;
import java.util.ArrayList;
import java.util.logging.Level;
import java.util.logging.Logger;
import javax.swing.JOptionPane;
import javax.swing.table.DefaultTableModel;
import model.ClienteModel;
import model.OS_ServicoModel;
import model.OsModel;
import model.ServicoModel;
import model.VeiculoModel;

/**
 *
 * @author andre
 */
public class jifOS extends javax.swing.JInternalFrame {

    private OsModel obj;
    private OS_ServicoModel obj2;
    private VeiculoData DAOVeiculo;
    private ClienteData DAOCliente;
    private ServicoData DAOServico;
    private OSData DAOos;
    private OS_ServicoData DAOos_ser;
    private int acao;

    ArrayList<VeiculoModel> listaveiculos;
    ArrayList<ClienteModel> listaclientes;
    ArrayList<ServicoModel> listaservicos;
    ArrayList<OsModel> listaos;
    ArrayList<OS_ServicoModel> listaOsServico;

    /**
     * Creates new form jifOS
     */
    public jifOS() {
        initComponents();
        //obj = new OsModel();
        try {
            //inicio DAO de Veiculo e Cliente (cliente para colocar nomes no jcomboBox)
            DAOCliente = new ClienteData();
            //busca registro e armazena na lista
            listaclientes = DAOCliente.carregaCliente();
            //limpa comboBox
            //jcbClientes.removeAllItems();
            //LimparTabelas();
            //pega item da lista e coloca no comboBox
            for (ClienteModel c : listaclientes) {
                jcbClientes.addItem(c.getNome());
            }
        } catch (Exception ex) {
            Logger.getLogger(jifVeiculo.class.getName()).log(Level.SEVERE, null, ex);
        }

        try {
            DAOServico = new ServicoData();
            //busca registro e armazena na lista
            listaservicos = DAOServico.carregaServicoOS();
            //limpa comboBox
            jcbVeiculos.removeAllItems();

            //pega item da lista e coloca no comboBox
            for (ServicoModel c : listaservicos) {
                jcbServico.addItem(c.getNomeServico());
            }
        } catch (Exception ex) {
            Logger.getLogger(jifVeiculo.class.getName()).log(Level.SEVERE, null, ex);
        }
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jLabel6 = new javax.swing.JLabel();
        jlId_OS = new javax.swing.JLabel();
        jtfBuscaOS = new javax.swing.JTextField();
        jScrollPane2 = new javax.swing.JScrollPane();
        jtbOS = new javax.swing.JTable();
        jLabel1 = new javax.swing.JLabel();
        jcbServico = new javax.swing.JComboBox<>();
        jbNovo = new javax.swing.JButton();
        jLabel2 = new javax.swing.JLabel();
        jbExcluir = new javax.swing.JButton();
        jtfDataIni = new javax.swing.JTextField();
        jbEditar = new javax.swing.JButton();
        jLabel3 = new javax.swing.JLabel();
        jLabel4 = new javax.swing.JLabel();
        jbFecharOS = new javax.swing.JButton();
        jtfDataFim = new javax.swing.JTextField();
        jbCancelar = new javax.swing.JButton();
        jbLimpar = new javax.swing.JButton();
        jScrollPane1 = new javax.swing.JScrollPane();
        jtbClienteVeiculo = new javax.swing.JTable();
        jLabel7 = new javax.swing.JLabel();
        jcbClientes = new javax.swing.JComboBox<>();
        jLabel8 = new javax.swing.JLabel();
        jcbVeiculos = new javax.swing.JComboBox<>();
        jbAdicionarServico = new javax.swing.JButton();
        jbRemoverServico = new javax.swing.JButton();
        jLabel5 = new javax.swing.JLabel();
        jtfTotal = new javax.swing.JTextField();

        setClosable(true);
        setIconifiable(true);
        setMaximizable(true);
        setResizable(true);

        jLabel6.setText("Busca:");

        jlId_OS.setText("0");

        jtfBuscaOS.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyReleased(java.awt.event.KeyEvent evt) {
                jtfBuscaOSKeyReleased(evt);
            }
        });

        jtbOS.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {
                {null, null, null},
                {null, null, null},
                {null, null, null},
                {null, null, null}
            },
            new String [] {
                "Total", "Data Início", "Data Fim"
            }
        ) {
            Class[] types = new Class [] {
                java.lang.String.class, java.lang.String.class, java.lang.String.class
            };
            boolean[] canEdit = new boolean [] {
                false, false, true
            };

            public Class getColumnClass(int columnIndex) {
                return types [columnIndex];
            }

            public boolean isCellEditable(int rowIndex, int columnIndex) {
                return canEdit [columnIndex];
            }
        });
        jtbOS.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                jtbOSMouseClicked(evt);
            }
        });
        jScrollPane2.setViewportView(jtbOS);

        jLabel1.setText("Ordem de Serviço");

        jcbServico.setModel(new javax.swing.DefaultComboBoxModel<>(new String[] { "Selecione" }));
        jcbServico.setToolTipText("");

        jbNovo.setText("Novo");
        jbNovo.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jbNovoActionPerformed(evt);
            }
        });

        jLabel2.setText("Serviço:");

        jbExcluir.setText("Excluir");
        jbExcluir.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jbExcluirActionPerformed(evt);
            }
        });

        jbEditar.setText("Editar");
        jbEditar.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jbEditarActionPerformed(evt);
            }
        });

        jLabel3.setText("Data Início:");

        jLabel4.setText("Data Fim:");

        jbFecharOS.setText("Fechar OS");

        jbCancelar.setText("Cancelar");
        jbCancelar.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jbCancelarActionPerformed(evt);
            }
        });

        jbLimpar.setText("Limpar");
        jbLimpar.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jbLimparActionPerformed(evt);
            }
        });

        jtbClienteVeiculo.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {
                {null, null, null},
                {null, null, null},
                {null, null, null},
                {null, null, null}
            },
            new String [] {
                "Nome", "Descrição", "Valor"
            }
        ) {
            Class[] types = new Class [] {
                java.lang.String.class, java.lang.String.class, java.lang.String.class
            };
            boolean[] canEdit = new boolean [] {
                false, false, false
            };

            public Class getColumnClass(int columnIndex) {
                return types [columnIndex];
            }

            public boolean isCellEditable(int rowIndex, int columnIndex) {
                return canEdit [columnIndex];
            }
        });
        jScrollPane1.setViewportView(jtbClienteVeiculo);

        jLabel7.setText("Cliente:");

        jcbClientes.setModel(new javax.swing.DefaultComboBoxModel<>(new String[] { "Selecione" }));
        jcbClientes.addItemListener(new java.awt.event.ItemListener() {
            public void itemStateChanged(java.awt.event.ItemEvent evt) {
                jcbClientesItemStateChanged(evt);
            }
        });
        jcbClientes.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jcbClientesActionPerformed(evt);
            }
        });

        jLabel8.setText("Veículo:");

        jcbVeiculos.setModel(new javax.swing.DefaultComboBoxModel<>(new String[] { "Selecione" }));

        jbAdicionarServico.setText("+");
        jbAdicionarServico.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jbAdicionarServicoActionPerformed(evt);
            }
        });

        jbRemoverServico.setText("-");
        jbRemoverServico.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jbRemoverServicoActionPerformed(evt);
            }
        });

        jLabel5.setText("Total:");

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(layout.createSequentialGroup()
                        .addContainerGap()
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(jScrollPane2)
                            .addGroup(layout.createSequentialGroup()
                                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                    .addGroup(layout.createSequentialGroup()
                                        .addGap(61, 61, 61)
                                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                                            .addGroup(layout.createSequentialGroup()
                                                .addComponent(jbExcluir)
                                                .addGap(37, 37, 37)
                                                .addComponent(jbLimpar)
                                                .addGap(54, 54, 54)
                                                .addComponent(jbCancelar))
                                            .addGroup(layout.createSequentialGroup()
                                                .addComponent(jbNovo)
                                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                                                .addComponent(jbEditar)
                                                .addGap(11, 11, 11))))
                                    .addGroup(layout.createSequentialGroup()
                                        .addGap(163, 163, 163)
                                        .addComponent(jbFecharOS))
                                    .addComponent(jlId_OS)
                                    .addGroup(layout.createSequentialGroup()
                                        .addGap(14, 14, 14)
                                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                            .addGroup(layout.createSequentialGroup()
                                                .addComponent(jLabel2)
                                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                                .addComponent(jcbServico, javax.swing.GroupLayout.PREFERRED_SIZE, 160, javax.swing.GroupLayout.PREFERRED_SIZE))
                                            .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)))
                                    .addGroup(layout.createSequentialGroup()
                                        .addComponent(jLabel7)
                                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                                            .addGroup(layout.createSequentialGroup()
                                                .addComponent(jcbClientes, javax.swing.GroupLayout.PREFERRED_SIZE, 156, javax.swing.GroupLayout.PREFERRED_SIZE)
                                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                                .addComponent(jLabel8)
                                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                                .addComponent(jcbVeiculos, javax.swing.GroupLayout.PREFERRED_SIZE, 145, javax.swing.GroupLayout.PREFERRED_SIZE))
                                            .addGroup(layout.createSequentialGroup()
                                                .addGap(206, 206, 206)
                                                .addComponent(jbAdicionarServico)
                                                .addGap(18, 18, 18)
                                                .addComponent(jbRemoverServico))))
                                    .addGroup(layout.createSequentialGroup()
                                        .addGap(35, 35, 35)
                                        .addComponent(jLabel6)
                                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                        .addComponent(jtfBuscaOS, javax.swing.GroupLayout.PREFERRED_SIZE, 300, javax.swing.GroupLayout.PREFERRED_SIZE)))
                                .addGap(0, 0, Short.MAX_VALUE))))
                    .addGroup(layout.createSequentialGroup()
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addGroup(layout.createSequentialGroup()
                                .addGap(189, 189, 189)
                                .addComponent(jLabel1))
                            .addGroup(layout.createSequentialGroup()
                                .addGap(164, 164, 164)
                                .addComponent(jLabel5)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                                .addComponent(jtfTotal, javax.swing.GroupLayout.PREFERRED_SIZE, 67, javax.swing.GroupLayout.PREFERRED_SIZE)))
                        .addGap(0, 0, Short.MAX_VALUE)))
                .addContainerGap())
            .addGroup(layout.createSequentialGroup()
                .addGap(52, 52, 52)
                .addComponent(jLabel3)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(jtfDataIni, javax.swing.GroupLayout.PREFERRED_SIZE, 96, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addComponent(jLabel4)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(jtfDataFim, javax.swing.GroupLayout.PREFERRED_SIZE, 96, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(jLabel1)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addComponent(jlId_OS)
                .addGap(18, 18, 18)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel7)
                    .addComponent(jcbClientes, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jLabel8)
                    .addComponent(jcbVeiculos, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jtfDataIni, javax.swing.GroupLayout.PREFERRED_SIZE, 33, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jLabel3)
                    .addComponent(jtfDataFim, javax.swing.GroupLayout.PREFERRED_SIZE, 33, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jLabel4))
                .addGap(18, 18, 18)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jcbServico, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jLabel2)
                    .addComponent(jbAdicionarServico)
                    .addComponent(jbRemoverServico))
                .addGap(7, 7, 7)
                .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, 84, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(18, 18, 18)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jtfTotal, javax.swing.GroupLayout.PREFERRED_SIZE, 30, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jLabel5))
                .addGap(24, 24, 24)
                .addComponent(jbFecharOS)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jbNovo)
                    .addComponent(jbEditar))
                .addGap(18, 18, 18)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jbExcluir)
                    .addComponent(jbLimpar)
                    .addComponent(jbCancelar))
                .addGap(18, 18, 18)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jtfBuscaOS, javax.swing.GroupLayout.PREFERRED_SIZE, 27, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jLabel6))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addComponent(jScrollPane2, javax.swing.GroupLayout.PREFERRED_SIZE, 121, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap(31, Short.MAX_VALUE))
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void jbEditarActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jbEditarActionPerformed

    }//GEN-LAST:event_jbEditarActionPerformed

    private void jbCancelarActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jbCancelarActionPerformed
        jbNovo.setEnabled(true);
        jbCancelar.setEnabled(false);
        jbEditar.setEnabled(false);
        jbExcluir.setEnabled(false);
        jtfBuscaOS.setEnabled(true);
        jcbClientes.setEnabled(false);
        jtfDataIni.setEnabled(false);
        jtfDataFim.setEnabled(true);
        jcbClientes.setEnabled(false);
        jcbServico.setEnabled(false);
        jcbVeiculos.setEnabled(false);
        jtfDataIni.setText("");
        jtfDataFim.setText("");
        jcbClientes.setSelectedIndex(0);
        jcbServico.setSelectedIndex(0);
        jcbVeiculos.setSelectedIndex(0);
    }//GEN-LAST:event_jbCancelarActionPerformed

    private void jbLimparActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jbLimparActionPerformed
        try {
            extras.TrataFormulario.limparCampos(this);
        } catch (Exception ex) {
            Logger.getLogger(jifVeiculo.class.getName()).log(Level.SEVERE, null, ex);
        }
    }//GEN-LAST:event_jbLimparActionPerformed

    private void jbExcluirActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jbExcluirActionPerformed
        try {
            if (JOptionPane.showConfirmDialog(this, "Deseja excluir esse Veiculo?") == JOptionPane.YES_OPTION) {
                if (DAOos.excluir(Integer.parseInt(jlId_OS.getText()))) {
                    JOptionPane.showMessageDialog(this, "Excluído com sucesso!");
                    jbCancelarActionPerformed(evt);
                }
            }
        } catch (Exception e) {
            JOptionPane.showMessageDialog(this, "Erro ao excluir: " + e.getMessage());
        }
    }//GEN-LAST:event_jbExcluirActionPerformed

    private void jcbClientesItemStateChanged(java.awt.event.ItemEvent evt) {//GEN-FIRST:event_jcbClientesItemStateChanged
        //jtfServico.setText("" + listaservicos.get(jcbClientes.getSelectedItem()).getNome());
        int idcliente = 0;
        for (ClienteModel c : listaclientes) {
            if (c.getNome().equals(jcbClientes.getSelectedItem())) {
                idcliente = c.getIdCliente();
            }
        }
        try {
            DAOVeiculo = new VeiculoData();
            //busca registro e armazena na lista
            listaveiculos = DAOVeiculo.carregaVeiculoOS(idcliente);
            jcbVeiculos.removeAllItems();
            jcbVeiculos.addItem("Selecione");
            for (VeiculoModel c : listaveiculos) {
                jcbVeiculos.addItem(c.getPlaca());
            }
        } catch (Exception ex) {
            Logger.getLogger(jifVeiculo.class.getName()).log(Level.SEVERE, null, ex);
        }

    }//GEN-LAST:event_jcbClientesItemStateChanged

    private void jtbOSMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_jtbOSMouseClicked

    }//GEN-LAST:event_jtbOSMouseClicked

    private void jbAdicionarServicoActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jbAdicionarServicoActionPerformed
//        try {
//            DefaultTableModel tbClienteVeiculo = (DefaultTableModel) jtbClienteVeiculo.getModel();
//            tbClienteVeiculo.addRow(new String[]{"" + listaservicos.get(jcbServico.getSelectedIndex()).getNomeServico(),
//                "" + listaservicos.get(jcbServico.getSelectedIndex()).getDescricao(),
//                "" + listaservicos.get(jcbServico.getSelectedIndex()).getValor()});
//        } catch (Exception e) {
//        }
        try {
            if (validarCampos()) {
                obj = new OsModel();
                if (preencherObjeto()) {
                    if (acao == 1) {
                        OSData dataOs = new OSData();
                        int ret = dataOs.incluirOS(obj);
                        if (ret > 0) {
                            JOptionPane.showMessageDialog(this, "Salvo com sucesso!",
                                    "Sistema", JOptionPane.INFORMATION_MESSAGE);
                            //salvar no banco
                            jbCancelarActionPerformed(evt);
                        }
                    }
                    if (acao == 2) {
                        OSData dataOs = new OSData();
                        int ret = dataOs.incluirOS(obj);
                        if (ret>0) {
                            boolean ret2 = DAOos_ser.incluir(obj2);
                            if (ret2) {
                                JOptionPane.showMessageDialog(this, "Editado com sucesso!",
                                        "Sistema", JOptionPane.INFORMATION_MESSAGE);
                                //salvar no banco
                                jbCancelarActionPerformed(evt);
                            }
                        }
                    }
                }
            }
        } catch (Exception erro) {
            JOptionPane.showMessageDialog(this, "Erro ao salvar:" + erro.getMessage(), "Sistema", JOptionPane.ERROR_MESSAGE);
        }
    }//GEN-LAST:event_jbAdicionarServicoActionPerformed

    private void jbRemoverServicoActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jbRemoverServicoActionPerformed
//        try {
//            int linha = jtbClienteVeiculo.getSelectedRow();
//            if (linha > -1) {
//                DefaultTableModel tbClienteVeiculo = (DefaultTableModel) jtbClienteVeiculo.getModel();
//                tbClienteVeiculo.removeRow(linha);
//            }
//        } catch (Exception e) {
//        }
    }//GEN-LAST:event_jbRemoverServicoActionPerformed

    private void jtfBuscaOSKeyReleased(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_jtfBuscaOSKeyReleased
//        try {
//            listaos = DAOos.pesquisar(jtfBuscaOS.getText());
//            DefaultTableModel mp = (DefaultTableModel) jtbOS.getModel();
//            mp.setNumRows(0);
//            for (OsModel u : listaos) {
//                mp.addRow(new String[]{"" + u.getTotal(), u.getDataInicial(), u.getDataFinal()});
//            }
//        } catch (Exception e) {
//            JOptionPane.showMessageDialog(this, "Erro ao pesquisar:" + e.getMessage());
//        }
    }//GEN-LAST:event_jtfBuscaOSKeyReleased

    private void jcbClientesActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jcbClientesActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_jcbClientesActionPerformed

    private void jbNovoActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jbNovoActionPerformed
        jbNovo.setEnabled(false);
        jbCancelar.setEnabled(true);
        jbEditar.setEnabled(false);
        jbExcluir.setEnabled(false);
        jtfBuscaOS.setEnabled(false);
        jtbOS.setEnabled(false);
        jcbClientes.setEnabled(true);
        jcbVeiculos.setEnabled(true);
        jcbServico.setEnabled(true);
        jtfDataIni.setEnabled(true);
        jtfDataFim.setEnabled(true);
        jtbClienteVeiculo.setEnabled(true);
        acao = 1;
    }//GEN-LAST:event_jbNovoActionPerformed


    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JLabel jLabel1;
    private javax.swing.JLabel jLabel2;
    private javax.swing.JLabel jLabel3;
    private javax.swing.JLabel jLabel4;
    private javax.swing.JLabel jLabel5;
    private javax.swing.JLabel jLabel6;
    private javax.swing.JLabel jLabel7;
    private javax.swing.JLabel jLabel8;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JScrollPane jScrollPane2;
    private javax.swing.JButton jbAdicionarServico;
    private javax.swing.JButton jbCancelar;
    private javax.swing.JButton jbEditar;
    private javax.swing.JButton jbExcluir;
    private javax.swing.JButton jbFecharOS;
    private javax.swing.JButton jbLimpar;
    private javax.swing.JButton jbNovo;
    private javax.swing.JButton jbRemoverServico;
    private javax.swing.JComboBox<String> jcbClientes;
    private javax.swing.JComboBox<String> jcbServico;
    private javax.swing.JComboBox<String> jcbVeiculos;
    private javax.swing.JLabel jlId_OS;
    private javax.swing.JTable jtbClienteVeiculo;
    private javax.swing.JTable jtbOS;
    private javax.swing.JTextField jtfBuscaOS;
    private javax.swing.JTextField jtfDataFim;
    private javax.swing.JTextField jtfDataIni;
    private javax.swing.JTextField jtfTotal;
    // End of variables declaration//GEN-END:variables

    private boolean validarCampos() {
        String msg = "";
        if (jtfDataFim.getText().length() < 3 || jtfDataFim.getText().length() > 15) {
            msg += "\nO campo Data fim deve conter entre 3 a 20 caracteres";
        }

        if (jtfDataIni.getText().length() < 3 || jtfDataIni.getText().length() > 15) {
            msg += "\nO campo data inicio deve conter entre 3 e 100 caracteres";
        }

//        if ((jtfTotal.getText().length()) == 0) {
//            msg += "\nO campo total deve conter um valor";
//        }
        if (msg.isEmpty()) {
            return true;
        } else {
            JOptionPane.showMessageDialog(this, "Os campos abaixo precisam de atenção:"
                    + msg, "Atenção", JOptionPane.ERROR_MESSAGE);
        }
        return false;
    }

    private boolean preencherObjeto() throws Exception {
        int idcliente = 0;
        String idchassi = "";
        int idservico = 0;
        obj.setDataInicial(jtfDataIni.getText());
        obj.setDataFinal(jtfDataFim.getText());
        obj.setTotal(Double.parseDouble("100"));

        for (ClienteModel c : listaclientes) {
            if (c.getNome().equals(jcbClientes.getSelectedItem())) {
                idcliente = c.getIdCliente();
            }
        }
        obj.setFk_cli_id(idcliente);

        for (VeiculoModel c : listaveiculos) {
            if (c.getPlaca().equals(jcbVeiculos.getSelectedItem())) {
                idchassi = c.getChassi();
            }
        }
        obj.setFk_vei_id(idchassi);

        for (ServicoModel s : listaservicos) {
            if (s.getNomeServico().equals(jcbServico.getSelectedItem())) {
                idservico = s.getIdServico();
            }
        }
        obj.setIdServico(idservico);

        return true;
    }

    private boolean preencherObjetoOS() throws Exception {
        obj2.setFk_os_id(jcbClientes.getSelectedIndex());
        obj2.setFk_ser_id(jcbVeiculos.getSelectedIndex());
        return true;
    }

    private void LimparTabelas() {
        DefaultTableModel tb1 = (DefaultTableModel) jtbClienteVeiculo.getModel();
        tb1.setNumRows(0);
    }

}
